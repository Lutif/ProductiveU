on:
  push:
    branches:
      - master

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Fetch tags
        run: git fetch --tags

      - name: Get latest tag
        id: get_latest_tag
        run: echo ::set-output name=tag::$(git describe --tags `git rev-list --tags --max-count=1`)

      - name: Increment tag
        id: increment_tag
        run: |
          latest_tag=${{ steps.get_latest_tag.outputs.tag }}
          if [ -z "$latest_tag" ]; then
            new_tag="v1.0.0"
          else
            IFS='.' read -r -a parts <<< "${latest_tag#v}"
            major=${parts[0]}
            minor=${parts[1]}
            patch=${parts[2]}
            new_tag="v$major.$minor.$((patch + 1))"
          fi
          echo "New tag: $new_tag"
          echo ::set-output name=new_tag::$new_tag

      - name: Build and package
        run: cargo build --release && tar -czvf productive_u.tar.gz target/release/productive_u

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.increment_tag.outputs.new_tag }}
          release_name: Release ${{ steps.increment_tag.outputs.new_tag }}
          body: |
            Release for commit ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./productive_u.tar.gz
          asset_name: productive_u.tar.gz
          asset_content_type: application/gzip
